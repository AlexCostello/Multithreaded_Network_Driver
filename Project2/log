cc -W -Wall -pedantic -g   -c -o networkdriver.o networkdriver.c
networkdriver.c: In function ‘init_network_driver’:
networkdriver.c:48:2: warning: C++ style comments are not allowed in ISO C90
  //Initiliaze Device
  ^
networkdriver.c:48:2: warning: (this will be reported only once per input file)
networkdriver.c:52:2: warning: ISO C90 forbids mixed declarations and code [-Wpedantic]
  pthread_t sendThread;
  ^
networkdriver.c:62:2: warning: ISO C90 forbids mixed declarations and code [-Wpedantic]
  int created;
  ^
networkdriver.c:66:5: warning: ISO C90 forbids mixed declarations and code [-Wpedantic]
     int i;
     ^
networkdriver.c:62:6: warning: variable ‘created’ set but not used [-Wunused-but-set-variable]
  int created;
      ^
networkdriver.c: In function ‘send_thread’:
networkdriver.c:93:3: warning: ISO C90 forbids mixed declarations and code [-Wpedantic]
   int sendLimit = 5; //Arbitrarily set
   ^
networkdriver.c: In function ‘receive_thread’:
networkdriver.c:123:28: warning: passing argument 1 of ‘init_packet_descriptor’ from incompatible pointer type
     init_packet_descriptor(&current_pd); // Reset packet descriptor before registering it to device.
                            ^
In file included from networkdriver.c:19:0:
packetdescriptor.h:30:6: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 void init_packet_descriptor(PacketDescriptor *pd);
      ^
networkdriver.c:124:49: warning: passing argument 2 of ‘register_receiving_packetdescriptor’ from incompatible pointer type
     register_receiving_packetdescriptor(netdev, &current_pd); //Register the packet with the device.
                                                 ^
In file included from networkdriver.c:24:0:
networkdevice.h:38:6: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 void register_receiving_packetdescriptor(NetworkDevice *nd, PacketDescriptor *pd);
      ^
networkdriver.c:130:34: warning: passing argument 2 of ‘nonblockingReadBB’ from incompatible pointer type
   if (nonblockingReadBB(recPool, &current_pd) != 1) { //If there's nothing waiting in the receive pool
                                  ^
In file included from networkdriver.c:27:0:
BoundedBuffer.h:33:5: note: expected ‘void **’ but argument is of type ‘struct PacketDescriptor **’
 int nonblockingReadBB(BoundedBuffer *bb, void **item);
     ^
networkdriver.c:131:4: warning: implicit declaration of function ‘nonblocking_get_packet’ [-Wimplicit-function-declaration]
    if (nonblocking_get_packet(*fpds_ptr, &current_pd) != 1) { //If we fail to get pd from fpds
    ^
networkdriver.c:134:30: warning: passing argument 1 of ‘init_packet_descriptor’ from incompatible pointer type
       init_packet_descriptor(&current_pd); //Reset pd before registering it to netdev
                              ^
In file included from networkdriver.c:19:0:
packetdescriptor.h:30:6: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 void init_packet_descriptor(PacketDescriptor *pd);
      ^
networkdriver.c:135:51: warning: passing argument 2 of ‘register_receiving_packetdescriptor’ from incompatible pointer type
       register_receiving_packetdescriptor(netdev, &current_pd); //Register packet with netdev
                                                   ^
In file included from networkdriver.c:24:0:
networkdevice.h:38:6: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 void register_receiving_packetdescriptor(NetworkDevice *nd, PacketDescriptor *pd);
      ^
networkdriver.c:137:45: warning: passing argument 1 of ‘packet_descriptor_get_pid’ from incompatible pointer type
          procID = packet_descriptor_get_pid(&filled_pd); //Find PID for Indexing
                                             ^
In file included from networkdriver.c:19:0:
packetdescriptor.h:41:5: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 PID packet_descriptor_get_pid(PacketDescriptor *pd);
     ^
networkdriver.c:150:37: warning: passing argument 1 of ‘init_packet_descriptor’ from incompatible pointer type
              init_packet_descriptor(&current_pd);
                                     ^
In file included from networkdriver.c:19:0:
packetdescriptor.h:30:6: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 void init_packet_descriptor(PacketDescriptor *pd);
      ^
networkdriver.c:151:58: warning: passing argument 2 of ‘register_receiving_packetdescriptor’ from incompatible pointer type
              register_receiving_packetdescriptor(netdev, &current_pd);
                                                          ^
In file included from networkdriver.c:24:0:
networkdevice.h:38:6: note: expected ‘struct PacketDescriptor *’ but argument is of type ‘struct PacketDescriptor **’
 void register_receiving_packetdescriptor(NetworkDevice *nd, PacketDescriptor *pd);
      ^
networkdriver.c: In function ‘nonblocking_get_packet’:
networkdriver.c:193:45: warning: passing argument 2 of ‘nonblockingReadBB’ from incompatible pointer type
  return nonblockingReadBB(bufferArray[pid], pd);
                                             ^
In file included from networkdriver.c:27:0:
BoundedBuffer.h:33:5: note: expected ‘void **’ but argument is of type ‘struct PacketDescriptor **’
 int nonblockingReadBB(BoundedBuffer *bb, void **item);
     ^
gcc -o mydemo -W -Wall -pedantic -g BoundedBuffer.o diagnostics.o fakeapplications.o freepacketdescriptorstore.o generic_queue.o networkdevice.o networkdriver.o packetdescriptor.o packetdescriptorcreator.o testharness.o -lpthread
